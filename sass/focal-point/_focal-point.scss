// =============================================================================
// Focal Point: Pure HTML/CSS Adaptive Images Framework
//
// Author: Adam Bradley, Daniel Guillan, 2012
// https://github.com/adamdbradley/focal-point
// Secondary author: Kykyev, 2013
//
// Original Focal-Point library has a problem of layout reflow 
// during slow image loading or fail one. That's because intrinsic
// image resizing ability. Several methods exists to handle this issue.
// 
// 1. `padding-bottom` as percent of `.focal-point` element width. This preserves image 
//    aspect ratio. Problem is that any wrap of `.focal-point` element has to have
//    `display` property set to `block`.
//
//  <div class="wrap">
//      <div class="focal-point aratio-4-3">
//          <div><img src="image-url.jpg" alt=""></div>
//      </div>
//  </div>
//    
//  .aratio-4x3 {
//      padding-bottom: 75%;
//  }
//
// 2. Include in HTML markup faux image of the same dimensions e.g
//    inlined SVG image of data-uri gif. Obvious downside is
//    extra markup.
//
//  <div class="wrap">
//      <div class="focal-point up-3 right-4">
//          <div>
//              <svg width="640" height="480" ></svg>
//              <img src="image-url.jpg" alt="">
//          </div>
//      </div>
//  </div>
//
// 3. Chrome dislikes inlined SVG.
//
//  <div class="wrap">
//      <div class="focal-point up-3 right-4">
//          <div>
//              <img src="data:uri">
//              <img src="image-url.jpg" alt="">
//          </div>
//      </div>
//  </div>// =============================================================================


@mixin focal-point(
        $grid: 12,
        $landscape-classes: true,
        $portrait-classes: true,
        $inner-element: div
    ) {

    // =============================================================================
    // 1. Variables
    // =============================================================================

    // Check if $grid is even and at least 2. If not, warn and reset grid to default.
    @if (type-of($grid) != number) or ($grid < 2) or ($grid / 2 != round($grid / 2)) {
        @warn 'Focal Point grid should be an even number (4, 6, 8, â€¦). Using default grid instead (12).';
        $grid: 12;
    }

    $half-grid: $grid / 2;
    $h: 4;
    $v: 3;
    $vertical-size: $v * 2;
    $horizontal-size: $h * 2;

    // =============================================================================
    // 2. Base classes
    // =============================================================================

    .focal-point {
        width: 100%;
        overflow: hidden;
    }

    .focal-point img {
        width: 100%;
        max-width: 100%;
        height: auto;
        -ms-interpolation-mode: bicubic;
        display: block;
    }

    .focal-point #{$inner-element} {
        position: relative;
        max-width: none;
        height: auto;
    }

    .focal-point #{$inner-element} {
        margin: -#{$v}em -#{$h}em;
    }

    .portrait.focal-point #{$inner-element} {
        margin: -#{$h}em -#{$v}em;
    }

    
    @for $i from 1 through $half-grid {

        // =============================================================================
        // 3. The math
        // =============================================================================

        $step: $vertical-size / $grid;
        $margin1: $vertical-size - ($step * ($half-grid - $i));
        $margin-op1: $step * ($half-grid - $i);

        $step: $horizontal-size / $grid;
        $margin2: $horizontal-size - ($step * ($half-grid - $i));
        $margin-op2: $step * ($half-grid - $i);

        // =============================================================================
        // 4. Landscape classes
        // =============================================================================

        @if $landscape-classes {

            .down-#{$i} #{$inner-element} {
                   margin-top: -#{$margin1}em;
                margin-bottom: -#{$margin-op1}em;
            }

            .up-#{$i} #{$inner-element} {
                   margin-top: -#{$margin-op1}em;
                margin-bottom: -#{$margin1}em;
            }

            .right-#{$i} #{$inner-element} {
                 margin-left: -#{$margin2}em;
                margin-right: -#{$margin-op2}em;
            }

             .left-#{$i} #{$inner-element} {
                 margin-left: -#{$margin-op2}em;
                margin-right: -#{$margin2}em;
            }
        }

        // =============================================================================
        // 5. Portrait classes
        // =============================================================================

        @if $portrait-classes {

            .portrait.down-#{$i} #{$inner-element} {
                   margin-top: -#{$margin2}em;
                margin-bottom: -#{$margin-op2}em;
            }

            .portrait.up-#{$i} #{$inner-element} {
                   margin-top: -#{$margin-op2}em;
                margin-bottom: -#{$margin2}em;
            }

            .portrait.right-#{$i} #{$inner-element} {
                 margin-left: -#{$margin1}em;
                margin-right: -#{$margin-op1}em;
            }

            .portrait.left-#{$i} #{$inner-element} {
                 margin-left: -#{$margin-op1}em;
                margin-right: -#{$margin1}em;
            }
        }
    }
}


@mixin focal-point__patch1() {

    .focal-point__patch1 {
        height: 0;
        padding-bottom: 100%; // default aspect ratio is 1x1
    }

    .aratio-4x3 {
        padding-bottom: 75%;
    }
    .aratio-16x9 {
        padding-bottom: 56.25%;
    }
    .aratio-3x2 {
        padding-bottom: 66.67%;
    }
    .aratio-5x3 {
        padding-bottom: 60%;
    }
    .aratio-5x4 {
        padding-bottom: 80%;
    }

    .portrait.aratio-4x3 {
        padding-bottom: 130.33%;
    }
    .portrait.aratio-16x9 {
        padding-bottom: 177.78%;
    }
    .portrait.aratio-3x2 {
        padding-bottom: 150%;
    }
    .portrait.aratio-5x3 {
        padding-bottom: 166.67%;
    }
    .portrait.aratio-5x4 {
        padding-bottom: 125%;
    }
}


@mixin focal-point__patch2() {

    .focal-point svg {
        width: 100%;
        max-width: 100%;
        height: auto;
    }

    .focal-point__patch2 {
        position: relative;
    }

    .focal-point__patch2 img {
        position: absolute;
        top: 0;
    }
}


@mixin focal-point__patch2nosvg() {
    .focal-point__patch2 {
        position: relative;
    }

    .focal-point__patch2 img:last-child {
        position: absolute;
        top: 0;
    }
}